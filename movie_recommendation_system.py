# -*- coding: utf-8 -*-
"""Movie recommendation system.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XpXSbm8-HftVC1Hh0yIomJ9I8fDSxrK-
"""

import numpy as np
import pandas as pd
import difflib
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

"""Data Processing and Pre-Processing

"""

# loadig csv file from pandas dataframe
df= pd.read_csv('/content/movies.csv')

#printing head and tail of dataframe
df.head()

df.tail()

#dimension of dataframe
df.shape

df.info()

#selecting the relevant features for recommendation
selected_features = ['genres','keywords','tagline','cast','director']
print(selected_features)

#relacing null values with null strings
for feature in selected_features:
  df[feature]= df[feature].fillna('')

#combining all the 5 features
combined_feature= df['genres']+' '+df['keywords']+' '+df['tagline']+' '+df['cast']+' '+df['director']
print(combined_feature)

#convert text data to feature vector
vectorizer= TfidfVectorizer()
feature_vector= vectorizer.fit_transform(combined_feature)
print(feature_vector)

"""Cosine Similarity"""

#getting similarity score using cosine similarity
similarity=cosine_similarity(feature_vector)
print(similarity)

print(similarity.shape)

#getting the movie name from user
movie= input(' Enter the movie name')

#Creating the list of movies from dataset
movies_list= df['title'].tolist()
print(movies_list)

#finding the close match of movie name given by user
find_close_match= difflib.get_close_matches(movie, movies_list)
print(find_close_match)

close_match= find_close_match[0]
print(close_match)

#indexing of the movie
index_of_the_movie= df[df.title== close_match]['index'].values[0]
print(index_of_the_movie)

#getting list of similar movie
similar_score= list(enumerate(similarity[index_of_the_movie]))
print(similar_score)

len(similar_score)

#sorting based on similarity score
sorted_similar_movie= sorted(similar_score, key = lambda x:x[1], reverse= True)
print(sorted_similar_movie)

"""Movie Recommendation system """

movie= input(' Enter the movie name:\n')
movies_list= df['title'].tolist()
find_close_match= difflib.get_close_matches(movie, movies_list)
close_match= find_close_match[0]
index_of_the_movie= df[df.title== close_match]['index'].values[0]
similar_score= list(enumerate(similarity[index_of_the_movie]))
sorted_similar_movie= sorted(similar_score, key = lambda x:x[1], reverse= True)
#print the list of movies based on index
print('Movies suggested for you: \n')
i=1
for movie in sorted_similar_movie:
  index= movie[0]
  title_from_index= df[df.index==index]['title'].values[0]
  if (i<30):
    print(i, '.',title_from_index)
    i+=1